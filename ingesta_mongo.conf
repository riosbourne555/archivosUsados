input{
        file{
            path => ["/home/cristian/Documentos/Especialidad_Big_Data/Captura_y_Almacenamiento/TrabajoFinal/US_Accidents_Dec19.csv"]
            start_position => "beginning"
            sincedb_path => "/dev/null"
            }
    }
filter{
        csv{
            columns => ["ID","Source","TMC","Severity","Start_Time","End_Time","Start_Lat","Start_Lng","End_Lat","End_Lng","Distance(mi)","Description","Number","Street","Side","City","County","State","Zipcode","Country","Timezone","Airport_Code","Weather_Timestamp","Temperature(F)","Wind_Chill(F)","Humidity(%)","Pressure(in)","Visibility(mi)","Wind_Direction","Wind_Speed(mph)","Precipitation(in)","Weather_Condition","Amenity","Bump","Crossing","Give_Way","Junction","No_Exit","Railway","Roundabout","Station","Stop","Traffic_Calming","Traffic_Signal","Turning_Loop","Sunrise_Sunset","Civil_Twilight","Nautical_Twilight","Astronomical_Twilight"]
            separator => ","

        }
        mutate{
            add_field => {"[start_location][type]" => "Point"}
            add_field => {"[start_location][coordinates]" => ["%{[Start_Lng]}","%{[Start_Lat]}"]}
            add_field => {"[end_location][type]" => "Point"}
            add_field => {"[end_location][coordinates]" => ["%{[End_Lng]}","%{[End_Lat]}"]}
            add_field => {"distance(mi)" => "%{Distance(mi)}"}
  
        }
        mutate{
            convert => {"[start_location][coordinates][0]" => "float"}
            convert => {"[start_location][coordinates][1]" => "float"}
            convert => {"[end_location][coordinates][0]" => "float"}
            convert => {"[end_location][coordinates][1]" => "float"}
            convert => {"distance(mi)" => "float"}
        }

        date{
            match => ["Start_Time", "yyyy-MM-dd HH:mm:ss"]
                target => "@timestamp"
        }
    }
output{
        mongodb{
            id => "mongodb_plugin_id"
            collection => "accidentes"
            database => "accidentes"
            uri => "mongodb://localhost:27017/accidentes"
            codec => "json"
        }
        stdout{}
    }
